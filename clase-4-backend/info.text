FS (file system) no se instala porque es nativo en node.

Para trabajar con fs se creó un archivo lamado product.json donde
se crea un array vacio ---> [], esto es porque fs necesita tener bases.

In Node.js, file I/O is provided by simple wrappers around standard POSIX 
functions. Node File System (fs) module can be imported using following 
syntax:

syntax:
var fs = require("fs")  

Instalaciones requeridas para este proyecto:

1. Generar backend con generador de aplicaciones express
 https://expressjs.com/es/starter/generator.html
 Instalación global: ---> npm install express-generator -g 
 (Se recomienda con Git Bash)

2. En la carpeta del trabajo actual mediante consola se puede
instalar una view, en este caso se generó sin view con el 
siguiente comando: --->  express --no-view nombre-del-proyecto

3. npm i en consola instala todas las dependencias

4. En la carpeta bin, el archivo www contiene todo lo necesario
para levantar el servidor. app.js es el corazón del servidor y
la carpeta routes la que contiene las rutas del servidor.

5. Para utilizar un script en consola debe escribirse lo siguiente:
---> npm run nombre-del-script en este caso start para levantar el servidor, 
se puede ver con detalle en el archivo package.json

6. Nodemon (is a tool that helps develop Node.js 
based applications by automatically restarting the node application when 
file changes in the directory are detected.).

 Para instalar nodemon en consola de forma global se escribe lo siguiente:
 ---> npm install -g nodemon # or using yarn: yarn global add nodemon.

 You can also install nodemon as a development dependency:
 --->  npm install --save-dev nodemon # or using yarn: yarn add nodemon -D
 
7. Para utilizar Nodemon colocar en scripts del archivo package.json
lo siguiente: "dev": "nodemon ./bin/www". De esta forma se puede levantar
el servidor con el comando correspondiente en la consola, en este caso:
---> npm run dev

8. Para evitar algún posible problema al usarse AXIOS para consumir una API 
se va a instalar CORS (is a node.js package for providing a Connect/Express 
middleware that can be used to enable CORS with various options.) 
---> npm i cors

9. Para instalar Axios, en consola ingresar: ---> npm i axios 


json.stringfy:
   JSON.stringify(value[, replacer[, space]])

   value:
   The value to convert to a JSON string.
   
   replacer (optional):
   A function that alters the behavior of the stringification process, or an array of strings or numbers naming properties of value that should be included in the output. If replacer is null or not provided, all properties of the object are included in the resulting JSON string.
   
   space (optional):
   A String or Number object that's used to insert white space (including indentation, line break characters, etc.) into the output JSON string for readability purposes.
   
   If this is a Number, it indicates the number of space characters to use as white space for indenting purposes; this number is capped at 10 (if it is greater, the value is just 10). Values less than 1 indicate that no space should be used.
   
   If this is a String, the string (or the first 10 characters of the string, if it's longer than that) is used as white space.
   
   If this parameter is not provided (or is null), no white space is used.